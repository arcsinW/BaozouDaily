<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BaoZouRiBao.Controls"
    >
    <Style TargetType="local:AndroidPopup" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AndroidPopup">

                    <Grid x:Name="BackgroundGrid"
                            Opacity="{TemplateBinding Opacity}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition />
                            </TransitionCollection>
                        </Grid.Transitions>
                        <ContentPresenter x:Name="ContentProsenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"    
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:BaoZouTaskPopup">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:BaoZouTaskPopup">
                    <Grid x:Name="BackgroundGrid"
                            Opacity="{TemplateBinding Opacity}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid.Transitions>
                            <TransitionCollection>
                                <EntranceThemeTransition/>
                            </TransitionCollection>
                        </Grid.Transitions>
                        <Grid  Background="{ThemeResource AdjustColorBrush}" Height="270" Width="250" CornerRadius="18">
                            <Ellipse Fill="White" Height="150" Width="150" VerticalAlignment="Top" Margin="-40"/>
                            <StackPanel>
                                <Image x:Name="image" HorizontalAlignment="Center" VerticalAlignment="Center" Height="150" Width="150" Margin="0,-40,0,8">
                                    <Image.Source>
                                        <BitmapImage UriSource="{TemplateBinding UriSource}"/>
                                    </Image.Source>
                                </Image>
                                   
                                <TextBlock Text="{TemplateBinding Title}" HorizontalAlignment="Center" Foreground="#FFFC7C88"/>
                                <StackPanel Orientation="Horizontal" Margin="0,8" HorizontalAlignment="Center">
                                    <Image Height="36" Width="36" Source="ms-appx:///Assets/Images/img_coin_mini.png"/>

                                    <TextBlock Foreground="#FFFEC64F" Text="+" Margin="4,0" VerticalAlignment="Center"/>

                                    <TextBlock Foreground="#FFFEC64F"  VerticalAlignment="Center" Text="{TemplateBinding CoinCount}"/>
                                </StackPanel>
                            </StackPanel>
                            <Button Content="OK" Height="48" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Style="{StaticResource AndroidPopupButtonStyle}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
    <Style TargetType="local:RoundButton">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{ThemeResource ThemeColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RoundButton">
                    <Grid x:Name="RootGrid" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter" CornerRadius="{TemplateBinding CornerRadius}" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
    <Style TargetType="local:ToastService">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ToastService">
                    <Grid x:Name="RootGrid">
                        <Grid.Resources>
                            <Storyboard x:Name="ShowStory">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="border">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="40"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Name="HideStory">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="border">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="50"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>
                        <Border x:Name="border" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,80">
                            <Border.RenderTransform>
                                <CompositeTransform/>
                            </Border.RenderTransform>
                            <Grid>
                                <Border Background="Black" CornerRadius="5" Opacity="1"/>
                                <TextBlock x:Name="ContentTB" FontSize="16" Margin="20,10" Text="{TemplateBinding ContentText}" Foreground="White"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:DialogService">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DialogService">
                    <Grid x:Name="RootGrid">
                        <Grid.Resources>
                            <Storyboard x:Name="ShowStory">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="DialogContent">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.3"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="DialogContent">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.3"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DialogContent">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MaskerBorder">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Name="HideStory">
                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DialogContent"/>
                                <DoubleAnimation Duration="0:0:0.3" To="1.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="DialogContent"/>
                                <DoubleAnimation Duration="0:0:0.3" To="1.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="DialogContent"/>
                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MaskerBorder"/>
                            </Storyboard>
                        </Grid.Resources>

                        <ContentPresenter
                            x:Name="DialogContent"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            MinHeight="100"
                            MinWidth="200"
                            CornerRadius="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Canvas.ZIndex="5"
                            RenderTransformOrigin="0.5,0.5"
                            >
                            <ContentPresenter.RenderTransform>
                                <CompositeTransform/>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>

                        <Border x:Name="MaskerBorder"
                                Background="{TemplateBinding Background}"
                                Canvas.ZIndex="1" 
                                >
                            <Border.RenderTransform>
                                <CompositeTransform/>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="local:GifAnimControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:GifAnimControl">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <win2d:CanvasAnimatedControl x:Name="animatedControl"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
 
    <Style TargetType="local:CommentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CommentControl">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid IsHoldingEnabled="True"
                              IsRightTapEnabled="True"
                              Holding="Grid_Holding"
                              RightTapped="Grid_RightTapped">       

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Ellipse Grid.Column="0" Width="40" Height="40" VerticalAlignment="Top">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding User.RealAvatarUrl,FallbackValue={StaticResource PlaceHolderAvatar}}"/>
                                </Ellipse.Fill>
                            </Ellipse>

                            <Grid Grid.Column="1" Margin="8,0">
                                <StackPanel>
                                    <TextBlock Text="{Binding User.Name,Mode=OneWay}"/>

                                    <TextBlock x:Name="parentTextBlock" TextWrapping="Wrap" Margin="0,16">
                                        <!--<Run Text="{Binding Content}" />-->
                                    </TextBlock>

                                    <Grid>
                                        <TextBlock Text="{Binding Time,Converter={StaticResource TimeStampToDateTimeConverter}}" Margin="0"/>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <Button x:Name="replyBtn" Height="24" Width="Auto" Style="{ThemeResource ImageButtonStyle}" Margin="0,0,8,0">
                                                <!--Command="{Binding DataContext.CommentCommand,ElementName=latestListView}" CommandParameter="{Binding Id}">-->
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="ms-appx:///Assets/Images/btn_video_reply_nor.png"/>
                                                    <TextBlock Text="�ظ�" Style="{ThemeResource DescTextBlockStyle}"/>
                                                </StackPanel>
                                            </Button>

                                            <Button x:Name="likeBtn" Height="24" Width="48" HorizontalAlignment="Right" Style="{ThemeResource ImageButtonStyle}"
                                                    Command="{Binding VoteCommand}" CommandParameter="{Binding Id}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="{Binding Like,Converter={StaticResource BoolToLikeBitmapConverter}}" VerticalAlignment="Center"/>
                                                    <TextBlock Text="{Binding Likes}"   Style="{ThemeResource DescTextBlockStyle}"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
      
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///Controls/PullToRefreshListView/PullToRefreshListView.xaml" />
        <ResourceDictionary Source="ms-appx:///Controls/ImageEx/ImageEx.xaml" />
        <ResourceDictionary Source="ms-appx:///Controls/BaoZouMediaTransportControls/BaoZouMediaTransportControls.xaml" />
        <ResourceDictionary Source="ms-appx:///Controls/Drawer/Drawer.xaml" />
        <ResourceDictionary Source="ms-appx:///Controls/IndicatorPivot/IndicatorPivot.xaml"/>
        <ResourceDictionary Source="ms-appx:///Controls/GifControl/GifControl.xaml"/>
        <ResourceDictionary Source="ms-appx:///Controls/SlidableListItem/SlidableListItem.xaml"/>
    </ResourceDictionary.MergedDictionaries>
 
</ResourceDictionary>
